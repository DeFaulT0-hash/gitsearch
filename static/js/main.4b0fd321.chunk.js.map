{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","setname","userName","setUserName","followers","setfollowers","following","setfollowing","logo","setlogo","repos","setrepos","useinput","setuserinput","error","seterror","useEffect","fetch","then","res","json","data","Data","login","public_repos","avatar_url","className","href","Form","onSubmit","message","Group","Input","placeholder","onChange","press","target","value","Button","content","Card","Image","src","wrapped","ui","Content","Header","extra","Icon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQA+FeA,MA1Ff,WAAgB,IAAD,EACQC,mBAAS,IADjB,mBACNC,EADM,KACDC,EADC,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGoBJ,mBAAS,IAH7B,mBAGNK,EAHM,KAGIC,EAHJ,OAIoBN,mBAAS,IAJ7B,mBAINO,EAJM,KAIIC,EAJJ,OAKSR,mBAAS,IALlB,mBAKNS,EALM,KAKDC,EALC,OAMUV,mBAAS,IANnB,mBAMNW,EANM,KAMAC,EANA,OAOmBZ,mBAAS,IAP5B,mBAONa,EAPM,KAOGC,EAPH,OAQUd,mBAAS,IARnB,mBAQNe,EARM,KAQAC,EARA,KAUbC,qBAAW,WACTC,MAAM,wCACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJC,EAAKD,QAEP,IAEF,IAAMC,EAAK,SAAC,GAA4D,IAA3DtB,EAA0D,EAA1DA,KAAKuB,EAAqD,EAArDA,MAAMnB,EAA+C,EAA/CA,UAAUE,EAAqC,EAArCA,UAAUkB,EAA2B,EAA3BA,aAAaC,EAAc,EAAdA,WACvDxB,EAAQD,GACRG,EAAYoB,GACZlB,EAAaD,GACbG,EAAaD,GACbK,EAASa,GACTf,EAAQgB,IAqBV,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,gDAAkB,mBAAGC,KAAK,sBAAR,SAA8B,cAAC,IAAD,CAAcD,UAAU,oBAE1E,qBAAKA,UAAU,SAAf,SACE,cAACE,EAAA,EAAD,CAAMC,SApBC,WACXZ,MAAM,gCAAD,OAAiCL,IACrCM,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACDA,EAAKS,QACNf,EAASM,EAAKS,UAGhBR,EAAKD,GACLN,EAAS,WAWP,SACE,eAACa,EAAA,EAAKG,MAAN,WACE,cAACH,EAAA,EAAKI,MAAN,CAAYC,YAAY,SAASjC,KAAK,cAAckC,SA1BjD,SAACC,GACZtB,EAAasB,EAAMC,OAAOC,UA0BlB,cAACT,EAAA,EAAKU,OAAN,CAAaC,QAAQ,kBAI1BzB,EAAS,6BAAKA,IACb,qBAAKY,UAAU,OAAf,SACE,eAACc,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAKlC,EAAMmC,SAAO,EAACC,IAAI,IAC9B,eAACJ,EAAA,EAAKK,QAAN,WACE,cAACL,EAAA,EAAKM,OAAN,UAAc9C,IACd,cAACwC,EAAA,EAAKM,OAAN,UAAc5C,OAEhB,cAACsC,EAAA,EAAKK,QAAN,CAAcE,OAAK,EAAnB,SACE,oBAAGpB,KAAK,OAAR,UACA,cAAEqB,EAAA,EAAF,CAAOhD,KAAK,SACTM,EAFH,kBAKF,cAACkC,EAAA,EAAKK,QAAN,CAAcE,OAAK,EAAnB,SACE,oBAAGpB,KAAK,OAAR,UACE,cAACqB,EAAA,EAAD,CAAMhD,KAAK,SACVI,EAFH,kBAKF,cAACoC,EAAA,EAAKK,QAAN,CAAcE,OAAK,EAAnB,SACE,oBAAGpB,KAAK,OAAR,UACE,cAACqB,EAAA,EAAD,CAAMhD,KAAK,SACVU,EAFH,mCCxECuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4b0fd321.chunk.js","sourcesContent":["import {useState,useEffect} from 'react';\nimport { Form,Card,Image,Icon } from 'semantic-ui-react';\nimport { AiFillGithub } from \"react-icons/ai\";\nimport './App.css';\n\nfunction App() {\n  const [name,setname]=useState('');\n  const [userName,setUserName] =useState('');\n  const [followers,setfollowers] = useState('');\n  const [following,setfollowing] = useState('');\n  const [logo,setlogo]= useState('');\n  const [repos,setrepos]=useState('');\n  const [useinput,setuserinput] = useState('');\n  const [error,seterror]=useState('');\n\n  useEffect (()=>{\n    fetch(\"https://api.github.com/users/example\")\n    .then(res=>res.json())\n    .then(data=>{\n      Data(data);\n    });\n  },[]);\n\n  const Data=({name,login,followers,following,public_repos,avatar_url})=>{\n    setname(name);\n    setUserName(login);\n    setfollowers(followers);\n    setfollowing(following);\n    setrepos(public_repos);\n    setlogo(avatar_url);\n  }\n\n  const search=(press)=>{\n    setuserinput(press.target.value)\n  }\n\n  const submit=()=>{\n    fetch(`https://api.github.com/users/${useinput}`)\n    .then(res=>res.json())\n    .then(data=>{\n      if(data.message){\n        seterror(data.message)\n      }\n      else{\n      Data(data);\n      seterror(null);\n      }\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <h1>Github Search <a href=\"https://github.com/\"><AiFillGithub className=\"git_icon\"/></a></h1>\n      </div>\n      <div className=\"search\">\n        <Form onSubmit={submit}>\n          <Form.Group>\n            <Form.Input placeholder=\"search\" name=\"github user\" onChange={search}/>\n            <Form.Button content=\"search\"/>\n          </Form.Group>\n        </Form>\n      </div>\n      {error ? (<h2>{error}</h2>):(\n        <div className=\"card\">\n          <Card>\n            <Image src={logo} wrapped ui={false} />\n            <Card.Content>\n              <Card.Header>{name}</Card.Header>\n              <Card.Header>{userName}</Card.Header>\n            </Card.Content>\n            <Card.Content extra>\n              <a href=\"#top\">\n              < Icon name='user' />\n                {following} Following\n              </a>\n            </Card.Content>\n            <Card.Content extra>\n              <a href=\"#top\">\n                <Icon name='user' />\n                {followers} Followers\n              </a>\n            </Card.Content>\n            <Card.Content extra>\n              <a href=\"#top\">\n                <Icon name='user' />\n                {repos} Public Repository\n              </a>\n              </Card.Content>\n          </Card>\n        </div>)}\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}